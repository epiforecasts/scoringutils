% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/other-package-interfaces.R
\name{to_yardstick_binary_class}
\alias{to_yardstick_binary_class}
\title{Convert to yardstick format for class predictions}
\usage{
to_yardstick_binary_class(binary_predictions, fun = round, ...)
}
\arguments{
\item{binary_predictions}{A data frame of binary predictions following the
same format used for \code{\link[=score]{score()}}. \code{to_yardstick_binary_class} can also be
called on the output of \code{\link[=score]{score()}}.}

\item{fun}{A function used to convert predictions into 0s and 1s. The default
is \code{\link[=round]{round()}}.}

\item{...}{Additional arguments to be passed to \code{fun},}
}
\value{
A data.table that conforms to the formatting requirements of
\code{yardstick}.
}
\description{
A function to convert from the format for binary forecasts that
\code{scoringutils} uses to the one used by the \code{yardstick} package for class
predictions.

For class predictions, \code{yardstick} doesn't use probabilities, but takes the
actual outcome (0 or 1) as the prediction. The function therefore converts
the predictions into either 0 or 1 and makes both "prediction" and
"true_value" a factor.

See \link{example_binary} and
\url{https://yardstick.tidymodels.org/articles/metric-types.html} for
more information.
}
\examples{


\dontrun{
library(yardstick)
library(dplyr)
ex <- to_yardstick_binary_class(example_binary)

ex |>
  group_by(model) |>
  accuracy(truth = true_value, estimate = prediction)

}
}
\keyword{data-handling}
