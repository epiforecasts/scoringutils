% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot}
\alias{plot}
\alias{plot.scoringutils_pairwise}
\alias{plot.scoringutils_available_forecasts}
\alias{plot.scoringutils_correlation}
\title{Various Plotting Methods for Outputs of scoringutils Functions}
\usage{
plot(x, ...)

\method{plot}{scoringutils_pairwise}(x, type = c("mean_scores_ratio", "pval"), ...)

\method{plot}{scoringutils_available_forecasts}(
  x,
  yvar = "model",
  xvar = "forecast_date",
  make_xvar_factor = TRUE,
  show_numbers = TRUE,
  ...
)

\method{plot}{scoringutils_correlation}(x, ...)
}
\arguments{
\item{x}{An S3 object with correlations between scores as produced by
\code{\link[=correlation]{correlation()}}.}

\item{...}{other arguments}

\item{type}{character vector of length one that is either
"mean_scores_ratio" or "pval". This denotes whether to
visualise the ratio or the p-value of the pairwise comparison.
Default is "mean_scores_ratio".}

\item{yvar}{character vector of length one that denotes the name of the column
to appear on the y-axis of the plot. Default is "model".}

\item{xvar}{character vector of length one that denotes the name of the column
to appear on the x-axis of the plot. Default is "forecast_date".}

\item{make_xvar_factor}{logical (default is TRUE). Whether or not to convert
the variable on the x-axis to a factor. This has an effect e.g. if dates
are shown on the x-axis.}

\item{show_numbers}{logical (default is \code{TRUE}) that indicates whether
or not to show the actual count numbers on the plot}
}
\value{
ggplot object with a plot of interval coverage

A ggplot2 object showing a coloured matrix of correlations
between metrics
}
\description{
Creates a heatmap of the ratios or pvalues from a pairwise comparison
between models

Visualise Where Forecasts Are Available

Plots a heatmap of correlations between different metrics
}
\examples{
library(ggplot2)
scores <- score(example_quantile)
pairwise <- pairwise_comparison(scores, by = "target_type")
plot(pairwise, type = "mean_scores_ratio") +
  facet_wrap(~target_type)
library(ggplot2)
available_forecasts <- available_forecasts(
  example_quantile, by = c("model", "target_type", "target_end_date")
)
plot(
 available_forecasts, xvar = "target_end_date", show_numbers = FALSE
) +
 facet_wrap("target_type")
scores <- score(example_quantile)
correlations <- correlation(
 summarise_scores(scores)
)
plot(correlations)
}
